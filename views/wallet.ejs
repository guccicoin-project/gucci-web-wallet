<!DOCTYPE html>
<html>
  <head>
    <%- include("partials/meta"); %>
    <%- include("partials/css"); %>

    <title>Wallet - Guccicoin Web Wallet</title>
  </head>
  <body>
    <%- include("partials/nav"); %>

    <section class="hero is-primary">
      <div class="hero-body">
        <section class="media">
          <figure class="media-left">
            <svg width="80" height="80" data-jdenticon-value="<%= wallet.walletAddress %>" style="border-radius: 2px;"></svg>
          </figure>
          <div class="media-content">
            <div class="content">
              <h1 class="title">
                <%= user.nickname %>'s Wallet
              </h1>
              <h2 class="subtitle">
                <%= balance.availableBalance %> GCX
              </h2>
              <div id="wallet-nav">
                <a href="/wallet/settings" class="button is-light">Wallet Settings</a>
              </div>
            </div>
          </div>
        </section>
      </div>
    </section>

    <%- include("partials/alerts"); %>

    <section class="section">
      <div class="columns is-multiline">
        <div class="column is-one-third">
          <div class="card">
            <div class="card-content">
              <h5 class="title is-4">Balance</h5>
              <div class="content">
                <dl class="fa-list">
                  <dt>
                    <span class="icon has-text-success"><i class="fas fa-check-circle fa-fw"></i></span>
                    Available Balance:
                  </dt>
                  <dd>
                    <b><%= balance.availableBalance %> GCX</b>
                  </dd>
                  <dt class="has-text-grey-light">
                    <span class="icon"><i class="fas fa-question-circle fa-fw"></i></span>
                    Unconfirmed Balance:
                  </dt>
                  <dd class="has-text-grey-light">
                    <i><%= balance.lockedAmount %> GCX</i>
                  </dd>
                  <dt class="has-text-grey-light">
                    <span class="icon"><i class="fas fa-circle fa-fw"></i></span>
                    Total Balance:
                  </dt>
                  <dd class="has-text-grey-light">
                    <i><%= Math.round((parseFloat(balance.lockedAmount) + parseFloat(balance.availableBalance)) * 100) / 100 %> GCX</i>
                  </dd>
                </dl>
              </div>
            </div>
          </div>
        </div>
        <div class="column is-two-thirds">
          <div class="card">
            <div class="card-content">
              <h5 class="title is-4">Transactions</h5>
              <p class="has-text-info">
                This needs to be improved. Single transactions may show up more than once on this table and may show incorrectly
                as in/out.
              </p>
              <p class="has-text-info">
                Only transactions in the last 1000 blocks are shown.
              </p>
              <table class="table">
                <thead>
                  <tr>
                    <th>In/Out</th>
                    <th>To/From</th>
                    <th>Total Amount</th>
                    <th>Date</th>
                    <th>Extra</th>
                  </tr>
                </thead>
                <tbody>
                  <% transactions.forEach((tx) => { %>
                    <tr>
                      <th><%= tx.inbound ? "In" : "Out" %></th>
                      <td><%= tx.address.substring(0, 10); %>...</td>
                      <td><%= tx.amount %></td>
                      <td><%= moment.unix(tx.timestamp).fromNow(); %></td>
                      <td><%= tx.type %></td>
                    </tr>
                  <% }); %>
                </tbody>
              </table>
            </div>
          </div>
        </div>
        <div class="column is-half">
          <div class="card">
            <div class="card-content">
              <h5 class="title is-4">Receive</h5>
              <center id="receiveQr" class="content"></center>
              <p class="content">
                <pre><code><%= wallet.walletAddress %></code></pre>
              </p>
            </div>
          </div>
        </div>
        <div class="column is-half">
          <div class="card">
            <div class="card-content">
              <h5 class="title is-4">Send</h5>
              <button class="button is-dark" onClick="startScan()" style="margin-bottom: 1em;">Scan QR</button>
              <form action="/wallet/sendtransaction" method="POST">
                <div class="field">
                  <label class="label">Recipient</label>
                  <div class="control">
                    <input id="sendRecipient" name="sendRecipient" class="input is-danger" type="text" placeholder="gucci3URv8AdD8UPR6YUKg7Vj3ThLP1Pn2RmkKoJMVWrc5erW4X1CPG3QsLPqJoe29Z8nr8jaRotjdF36aVaMMPV3JXyeUdrc772y" required>
                  </div>
                  <p class="help">The public address of the person that you are sending guccicoin to.</p>
                </div>

                <div class="field">
                  <label class="label">Amount</label>
                  <div class="control">
                    <input id="sendAmount" name="sendAmount" class="input is-danger" type="number" placeholder="10000.00" min="0" max="<%= balance.availableBalance %>" required>
                  </div>
                  <p class="help">The amount of guccicoin that the recipient will receive.</p>
                </div>

                <div class="field">
                  <label class="label">Fee</label>
                  <div class="control">
                    <input id="sendFee" name="sendFee" class="input is-danger" type="number" value="0.1" min="0.1" step="0.1" max="<%= balance.availableBalance %>" required>
                  </div>
                  <p class="help">The amount of guccicoin that is used to process the transaction. A higher fee will get your transaction through the network faster. <i>(min 0.1)</i></p>
                </div>

                <div class="field">
                  <label class="label">Payment ID</label>
                  <div class="control">
                    <input id="sendId" name="sendId" class="input is-danger" type="text" placeholder="31f4a2317220780e4bb3e7630455efed91114d2a8b525cfbb0510dd6bc09b43d">
                  </div>
                  <p class="help">If your recipient gives you a Payment ID put it here (otherwise leave it blank). This is usually used for automated wallets.</p>
                </div>

                <div class="field is-grouped">
                  <div class="control">
                    <button type="submit" class="button is-link" id="sendButton" disabled>Send</button>
                  </div>
                  <div class="control">
                    <button class="button is-text" onClick="clearSend()">Clear</button>
                  </div>
                </div>
              </form>
            </div>
          </div>
        </div>
      </div>
    </section>

    <div id="qr-modal" class="modal">
      <div class="modal-background"></div>
      <div class="modal-card">
        <header class="modal-card-head">
          <p class="modal-card-title">Scan Transaction QR</p>
          <button class="delete" aria-label="close" onClick="stopScan()"></button>
        </header>
        <section class="modal-card-body">
          <video id="qr-preview"></video>
        </section>
        <footer class="modal-card-foot">
          <button class="button" onClick="stopScan()">Cancel</button>
        </footer>
      </div>
    </div>

    <%- include("partials/js"); %>
    <script src="https://github.com/schmich/instascan/releases/download/1.0.0/instascan.min.js"></script>
    <script>
      let scanner = new Instascan.Scanner({
        video: document.getElementById('qr-preview')
      });

      scanner.addListener('scan', function(content) {
        // Get rid of the content in the fields.
        clearSend()

        // *NEW* Guccicoin QR codes
        if (content.startsWith("guccicoin:gucci")) {
          // Create a URI parser using an 'a' element
          var parser = document.createElement('a');

          // Set the URI of the 'a' element to content.
          parser.href = content;

          // Set the value of the recipient field to the pathname (i.e address)
          $("#sendRecipient").val(parser.pathname);
          
          // Parse the query string.
          var query = parseQuery(parser.search);

          // If we have an amount in the query
          if (query.amount) {
            // Set the value of the amount field to the amount.
            $("#sendAmount").val(query.amount);
          }

          // If we have a payment ID.
          if (query.id) {
            // Set the value of the id field to the id.
            $("#sendId").val(query.id);
          }

          // Get rid of the parser element
          parser.remove();

        // Plain Guccicoin QR
        } else if (content.startsWith("gucci")) {
          $("#sendRecipient").val(content);
        } else {
          // Or just return that it was a bad QR
          return invalidScan();
        }

        validate();

        // Clean up the QR scanner.
        stopScan();
      });

      function invalidScan() {
        stopScan();
        alert("Invalid transaction QR!");
      }

      function startScan() {
        // Search for cameras that we are allowed to access.
        Instascan.Camera.getCameras().then(function (cameras) {
          // If we have cameras.
          if (cameras.length > 0) {
            // Show the modal.
            $("#qr-modal").addClass("is-active");
            // Start the scanner.
            scanner.start(cameras[0]);
          } else {
            // Tell the user that we can't use any cameras.
            alert("No cameras could be found to scan QR codes.");
          }
        }).catch(function(e) {
          // Print error to console and user.
          alert("There was a problem while detecting cameras!");
          console.error(e);
        });
      }

      function stopScan() {
        // Stop the scanner
        scanner.stop().then(function() {
          // Hide the qr modal.
          $("#qr-modal").removeClass("is-active");
        });
      }

      function parseQuery(queryString) {
        var query = {};
        var pairs = (queryString[0] === '?' ? queryString.substr(1) : queryString).split('&');
        for (var i = 0; i < pairs.length; i++) {
          var pair = pairs[i].split('=');
          query[decodeURIComponent(pair[0])] = decodeURIComponent(pair[1] || '');
        }
        return query;
      }
    </script>

    <script>
      var receiveQr = new QRCode(document.getElementById("receiveQr"), {
        text: "guccicoin:<%= wallet.walletAddress %>"
      });

      function clearSend() {
        $("#sendRecipient").val("");
        $("#sendAmount").val("");
        $("#sendFee").val("0.1");
        $("#sendId").val("");
      }
    </script>

    <script>
      var recipientValid = false;
      var amountValid = false;
      var feeValid = false;
      var idValid = false;

      $(document).ready(validate);

      function validate() {
        recipientValid = true;
        amountValid = true;
        feeValid = true;
        idValid = true;

        if (($("#sendRecipient").val().length != 101 && $("#sendRecipient").val().length != 189) || $("#sendRecipient").val().substring(0, 5) != "gucci") {
          recipientValid = false;
        }

        if (($("#sendAmount").val() + $("#feeAmount").val()) > <%= balance.availableBalance %>) {
          feeValid = false;
        }

        if (($("#sendAmount").val() > <%= balance.availableBalance %>) || $("#sendAmount").val() <= 0) {
          amountValid = false;
        }

        if (($("#feeAmount").val() > <%= balance.availableBalance %>) || $("#feeAmount").val() <= 0) {
          feeValid = false;
        }

        if ($("#sendId").val().length != 64 || !isHex($("#sendId").val())) {
          idValid = false;
        }

        if ($("#sendId").val() == "") {
          idValid = true;
        }

        recipientValid ? $("#sendRecipient").addClass("is-success").removeClass("is-danger") : $("#sendRecipient").addClass("is-danger").removeClass("is-success");
        amountValid ? $("#sendAmount").addClass("is-success").removeClass("is-danger") : $("#sendAmount").addClass("is-danger").removeClass("is-success");
        feeValid ? $("#sendFee").addClass("is-success").removeClass("is-danger") : $("#sendFee").addClass("is-danger").removeClass("is-success");
        idValid ? $("#sendId").addClass("is-success").removeClass("is-danger") : $("#sendId").addClass("is-danger").removeClass("is-success");

        $("#sendButton").prop("disabled", !(recipientValid && amountValid && feeValid && idValid));
      }
      
      $("#sendRecipient").change(validate).keydown(validate);
      $("#sendAmount").change(validate).keydown(validate);
      $("#sendFee").change(validate).keydown(validate);
      $("#sendId").change(validate).keydown(validate);

      function isHex(input) {
        var re = /[0-9A-Fa-f]{6}/g;
        return re.test(input);
      }
    </script>
  </body>
</html>